# SPDX-FileCopyrightText: 2023 The Crossplane Authors <https://crossplane.io>
#
# SPDX-License-Identifier: Apache-2.0

name: test-provider
resources:
  aws_accessanalyzer_analyzer:
    subCategory: IAM Access Analyzer
    description: Manages an Access Analyzer Analyzer
    name: aws_accessanalyzer_analyzer
    title: aws_accessanalyzer_analyzer
    examples:
      - name: example
        manifest: |-
          {
            "analyzer_name": "example"
          }
      - name: example
        manifest: |-
          {
            "analyzer_name": "example",
            "depends_on": [
              "${aws_organizations_organization.example}"
            ],
            "type": "ORGANIZATION"
          }
        dependencies:
          aws_organizations_organization.example: |-
            {
              "aws_service_access_principals": [
                "access-analyzer.amazonaws.com"
              ]
            }
    argumentDocs:
      analyzer_name: "- (Required) Name of the Analyzer."
      arn: "- The Amazon Resource Name (ARN) of the Analyzer."
      id: "- Analyzer name."
      tags: "- (Optional) Key-value map of resource tags. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level."
      tags_all: "- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block."
      type: "- (Optional) Type of Analyzer. Valid values are ACCOUNT or ORGANIZATION. Defaults to ACCOUNT."
    importStatements: []
  aws_ebs_volume:
    subCategory: EBS (EC2)
    description: Provides an elastic block storage resource.
    name: aws_ebs_volume
    title: aws_ebs_volume
    examples:
      - name: example
        manifest: |-
          {
            "availability_zone": "us-west-2a",
            "size": 40,
            "tags": {
              "Name": "HelloWorld"
            }
          }
    argumentDocs:
      arn: "- The volume ARN (e.g., arn:aws:ec2:us-east-1:0123456789012:volume/vol-59fcb34e)."
      availability_zone: "- (Required) The AZ where the EBS volume will exist."
      create: "- (Default 5 minutes) Used for creating volumes. This includes the time required for the volume to become available"
      delete: "- (Default 5 minutes) Used for destroying volumes"
      encrypted: "- (Optional) If true, the disk will be encrypted."
      id: "- The volume ID (e.g., vol-59fcb34e)."
      iops: "- (Optional) The amount of IOPS to provision for the disk. Only valid for type of io1, io2 or gp3."
      kms_key_id: "- (Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true. Note: Terraform must be running with credentials which have the GenerateDataKeyWithoutPlaintext permission on the specified KMS key as required by the EBS KMS CMK volume provisioning process to prevent a volume from being created and almost immediately deleted."
      multi_attach_enabled: "- (Optional) Specifies whether to enable Amazon EBS Multi-Attach. Multi-Attach is supported on io1 and io2 volumes."
      outpost_arn: "- (Optional) The Amazon Resource Name (ARN) of the Outpost."
      size: "- (Optional) The size of the drive in GiBs."
      snapshot_id: (Optional) A snapshot to base the EBS volume off of.
      tags: "- (Optional) A map of tags to assign to the resource. If configured with a provider default_tags configuration block present, tags with matching keys will overwrite those defined at the provider-level."
      tags_all: "- A map of tags assigned to the resource, including those inherited from the provider default_tags configuration block."
      throughput: "- (Optional) The throughput that the volume supports, in MiB/s. Only valid for type of gp3."
      type: "- (Optional) The type of EBS volume. Can be standard, gp2, gp3, io1, io2, sc1 or st1 (Default: gp2)."
      update: "- (Default 5 minutes) Used for size, type, or iops volume changes"
    importStatements: []
  aws_s3_bucket_acl:
    subCategory: S3 (Simple Storage)
    description: Provides an S3 bucket ACL resource.
    name: aws_s3_bucket_acl
    title: aws_s3_bucket_acl
    examples:
      - name: example_bucket_acl
        manifest: |-
          {
            "acl": "private",
            "bucket": "${aws_s3_bucket.example.id}"
          }
        references:
          bucket: aws_s3_bucket.example.id
        dependencies:
          aws_s3_bucket.example: |-
            {
              "bucket": "my-tf-example-bucket"
            }
      - name: example
        manifest: |-
          {
            "access_control_policy": [
              {
                "grant": [
                  {
                    "grantee": [
                      {
                        "id": "${data.aws_canonical_user_id.current.id}",
                        "type": "CanonicalUser"
                      }
                    ],
                    "permission": "READ"
                  },
                  {
                    "grantee": [
                      {
                        "type": "Group",
                        "uri": "http://acs.amazonaws.com/groups/s3/LogDelivery"
                      }
                    ],
                    "permission": "READ_ACP"
                  }
                ],
                "owner": [
                  {
                    "id": "${data.aws_canonical_user_id.current.id}"
                  }
                ]
              }
            ],
            "bucket": "${aws_s3_bucket.example.id}"
          }
        references:
          access_control_policy.grant.grantee.id: data.aws_canonical_user_id.current.id
          access_control_policy.owner.id: data.aws_canonical_user_id.current.id
          bucket: aws_s3_bucket.example.id
        dependencies:
          aws_s3_bucket.example: |-
            {
              "bucket": "my-tf-example-bucket"
            }
    argumentDocs:
      access_control_policy: "- (Optional, Conflicts with acl) A configuration block that sets the ACL permissions for an object per grantee documented below."
      access_control_policy.grant: "- (Required) Set of grant configuration blocks documented below."
      access_control_policy.grant.grantee: "- (Required) Configuration block for the person being granted permissions documented below."
      access_control_policy.grant.permission: "- (Required) Logging permissions assigned to the grantee for the bucket."
      access_control_policy.owner: "- (Required) Configuration block of the bucket owner's display name and ID documented below."
      acl: "- (Optional, Conflicts with access_control_policy) The canned ACL to apply to the bucket."
      bucket: "- (Required, Forces new resource) The name of the bucket."
      expected_bucket_owner: "- (Optional, Forces new resource) The account ID of the expected bucket owner."
      grantee.email_address: "- (Optional) Email address of the grantee. See Regions and Endpoints for supported AWS regions where this argument can be specified."
      grantee.id: "- (Optional) The canonical user ID of the grantee."
      grantee.type: "- (Required) Type of grantee. Valid values: CanonicalUser, AmazonCustomerByEmail, Group."
      grantee.uri: "- (Optional) URI of the grantee group."
      id: "- The bucket, expected_bucket_owner (if configured), and acl (if configured) separated by commas (,)."
      owner.display_name: "- (Optional) The display name of the owner."
      owner.id: "- (Required) The ID of the owner."
    importStatements: []
